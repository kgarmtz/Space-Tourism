/* ------------------- */
/*  Custom properties  */
/* ------------------- */

:root {
  /* colors */
  --clr-dark: 230 35% 7%;
  --clr-light: 231 77% 90%;
  --clr-white: 0 0% 100%;

  /* font-sizes */
  --fs-900: 9.375rem;
  --fs-800: 6.25rem;
  --fs-700: 3.5rem;
  --fs-600: 2rem;
  --fs-500: 1.75rem;
  --fs-450: 1.5rem;
  --fs-400: 1.125rem; /* base size: body text size */
  --fs-300: 1rem;
  --fs-200: 0.875rem;

  /* font-families */
  --ff-serif: "Bellefair", serif;
  --ff-sans-cond: "Barlow Condensed", sans-serif;
  --ff-sans-normal: "Barlow", sans-serif;
}

/* ------------------- */
/*      CSS Reset      */
/* ------------------- */

/* Box sizing */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reset margins */
body,
h1,
h2,
h3,
h4,
h5,
p,
figure,
picture {
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  font-weight: 400;
}

/* Set up the body */
body {
  font-family: var(--ff-sans-normal);
  font-size: var(--fs-400);
  color: hsl(var(--clr-white));
  background-color: hsl(var(--clr-dark));
  line-height: 1.5;
  min-height: 100vh;
  padding: 2rem;
}

/* Make images easier to work with */
img,
picture {
  display: block;
  max-width: 100%;
}

/* Make form elements easier to work with */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove animations for people who've turned them off */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* ------------------- */
/*   Utility Classes   */
/* ------------------- */

/* General */

.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-space, 1rem);
}

.container {
  width: min(var(--max-width, 70rem), 100% - var(--padding, 4rem));
  margin-inline: auto;
}

.container--narrow {
  /* It can be at most 55rem, not more */
  --max-width: 55rem;
}

.container-wide {
  /* It can be at most 90rem, not more */
  --max-width: 90rem;
}

.container-no-padding {
  --padding: 0;
}

/* Screen-Reader Only */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap; /* added line */
  border: 0;
}

/* Colors */

.bg-dark {
  background-color: hsl(var(--clr-dark));
}

.bg-accent {
  background-color: hsl(var(--clr-light));
}

.bg-white {
  background-color: hsl(var(--clr-white));
}

.text-dark {
  color: hsl(var(--clr-dark));
}

.text-accent {
  color: hsl(var(--clr-light));
}

.text-white {
  color: hsl(var(--clr-white));
}

/* Typography */

.ff-serif {
  font-family: var(--ff-serif);
}
.ff-sans-cond {
  font-family: var(--ff-sans-cond);
}
.ff-sans-normal {
  font-family: var(--ff-sans-normal);
}

.letter-spacing-1 {
  letter-spacing: 4.75px;
}
.letter-spacing-2 {
  letter-spacing: 2.7px;
}
.letter-spacing-3 {
  letter-spacing: 2.35px;
}

.uppercase {
  text-transform: uppercase;
}

.fs-900 {
  font-size: var(--fs-900);
}
.fs-800 {
  font-size: var(--fs-800);
}
.fs-700 {
  font-size: var(--fs-700);
}
.fs-600 {
  font-size: var(--fs-600);
}
.fs-500 {
  font-size: var(--fs-500);
}

.fs-450 {
  font-size: var(--fs-450);
}

.fs-400 {
  font-size: var(--fs-400);
}
.fs-300 {
  font-size: var(--fs-300);
}
.fs-200 {
  font-size: var(--fs-200);
}

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
  line-height: 1.1;
}

.mg-right {
  margin-right: 3.5rem;
}

/* Numbered Title Component */

.numbered-title {
  font-size: var(--fs-500);
  font-family: var(--ff-sans-cond);
  text-transform: uppercase;
  letter-spacing: 4.72px;
  grid-column: 1 / -1;
}

.numbered-title span {
  margin-right: 0.4em;
  color: hsl(var(--clr-white) / 0.25);
  font-weight: bold;
}

/* Colors Section */
#colors {
  --gap: 2rem;
  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));
}

/* Typography Section */
#typography {
  --gap: 2rem;
  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
}

/* ------------------- */
/*      Components     */
/* ------------------- */

/* em: If the font-size changes then the padding will do as well */
.large-button {
  position: relative;
  display: grid;
  /* Forcing a new stacking problems to prevent future issues */
  z-index: 1;
  place-items: center;
  padding: 0 2em;
  border-radius: 50%;
  aspect-ratio: 1;
  text-decoration: none;
}

/* For creation of decorative elements use pseudo elements */

.large-button::after {
  content: "";
  position: absolute;
  z-index: -1;
  width: 100%;
  height: 100%;
  background: hsl(var(--clr-light) / 0.08);
  border-radius: 50%;
  opacity: 0;
  transition: opacity 500ms linear,
    transform 750ms cubic-bezier(0.73, 0.25, 0.58, 1.33);
}

.large-button:hover::after,
.large-button:focus::after {
  opacity: 1;
  transform: scale(1.4);
}

/* ------------------- */
/*      Navigation     */
/* ------------------- */

.primary-navigation {
  --underline-gap: 2em;
  /* Remove default styles of the <ul> */
  list-style: none;
  padding: 0;
  margin: 0;
}

.primary-navigation a {
  font-family: var(--ff-sans-cond);
  text-decoration: none;
}

.primary-navigation a > span {
  font-weight: 700;
  margin-right: 0.5em;
}

/* Select every direct child - to make this component more robust 
or reusable in order to use this in different situations. */
.underline-indicators > * {
  padding: var(--underline-gap, 1em) 0;
  position: relative;
  /* Remove the default border of buttons but it doesn't matter if it is a button or link*/
  border: 0;
  cursor: pointer;
}

.underline-indicators > *::after {
  content: "";
  border-radius: 2px;
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 3px;
  background-color: hsl(var(--clr-white) / 0.25);
  transform: scale(0.2);
  transition: transform 400ms ease-in-out;
}

.underline-indicators > *:hover::after,
.underline-indicators > *:focus::after {
  transform: scale(1);
  background-color: hsl(var(--clr-white) / 0.5);
}

.underline-indicators > .active::after,
.underline-indicators > [aria-selected="true"]::after {
  background-color: hsl(var(--clr-white));
}

.underline-indicators > [aria-selected="true"] {
  color: hsl(var(--clr-white) / 1);
}

/* ------------------- */
/*        Tabs         */
/* ------------------- */
.tab-list {
  --gap: 2.5rem;
}
